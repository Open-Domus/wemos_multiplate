substitutions:
  device_name: piastra-prototipo-01

esphome:
  name: ${device_name}

esp8266:
  board: d1_mini

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  ap:
    ssid: ${device_name} hotspot
    password: !secret hotspot_password

logger:

api:

ota:

i2c:
  scl: D1
  sda: D2
  scan: true

apds9960:
  address: 0x39
  update_interval: 5s
  ambient_light_gain: 64x
  proximity_gain: 4x

display:
- platform: ssd1306_i2c
  model: SSD1306 128x32
  rotation: 180
  address: 0x3C
  lambda: |-
    it.printf(0, 0, id(font1), TextAlign::TOP_LEFT, "OpenDomus");
    it.strftime(128, 0, id(font1), TextAlign::TOP_RIGHT, "%H:%M", id(display_time).now());
    if (id(display_temperature).has_state()) {
      it.printf(0, 16, id(font1), TextAlign::TOP_LEFT, "T %.1f", id(display_temperature).state);
    }
    if (id(display_humidity).has_state()) {
      it.printf(128, 16, id(font1), TextAlign::TOP_RIGHT, "H %.0f%%", id(display_humidity).state);
    }
    if (id(display_motion).state) {
      it.printf(64, 16, id(font1), TextAlign::TOP_CENTER, "(*)");
    }

time:
- platform: homeassistant
  timezone: Europe/Rome
  id: display_time

font:
- file: retrogaming.ttf
  id: font1
  size: 11
  glyphs: '!"%*()+=,-_.:Â°0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz'

sensor:
- platform: sht3xd
  temperature:
    name: "${device_name} temperature"
    id: display_temperature
  humidity:
    name: "${device_name} humidity"
    id: display_humidity
  address: 0x44
  update_interval: 120s
- platform: adc
  pin: A0
  name: "${device_name} illuminance"
  device_class: illuminance
  unit_of_measurement: lx
  accuracy_decimals: 0
  update_interval: 120s
  filters:
    - lambda: |-
        return (x / 10000.0) * 2000000.0;
- platform: apds9960
  type: PROXIMITY
  name: "${device_name} proximity"
- platform: apds9960
  type: CLEAR
  name: "${device_name} ambient light"

binary_sensor:
- platform: gpio
  pin: D5
  name: "${device_name} motion"
  id: display_motion
  device_class: motion
- platform: apds9960
  direction: UP
  name: "${device_name} gesture up"
- platform: apds9960
  direction: DOWN
  name: "${device_name} gesture down"
- platform: apds9960
  direction: LEFT
  name: "${device_name} gesture left"
- platform: apds9960
  direction: RIGHT
  name: "${device_name} gesture right"

light:
- platform: neopixelbus
  pin: D6
  name: "${device_name} leds"
  variant: WS2811
  num_leds: 3

button:
- platform: restart
  name: "${device_name} reset"

switch:
- platform: gpio
  pin: D3
  id: buzzer
  name: "${device_name} buzzer"
  on_turn_on:
  - delay: 750ms
  - switch.turn_off: buzzer
- platform: gpio
  pin: D7
  name: "${device_name} relay"
